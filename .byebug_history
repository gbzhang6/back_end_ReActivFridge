continue
exit
exit!!
result["matches"].sort_by{|h| h["rating"]}.reverse
result["matches"].sort_by{|h| h["rating"]}
result["matches"].sort_by(|h| h["rating"])
result["matches"][0]["rating"]
result["matches"][0]
result["matches"]
result["matches']
result.matches
result
continue
finalURL
exit
que
query.split('%20').each{|item| que = que+"&allowedIngredient[]=#{item}&facetField[]=#{item}"}
query.split('%20').each{|item| que = que+`&allowedIngredient[]=#{item}&facetField[]=#{item}`}
que
exit
continue
que
continue
exit
q
continue
exit
query.split('%20').each{|item| a = a+`&allowedIngredient[]=#{item}`}
a = ""
query
q
exit
result
res
continue
finalURL
exit
n
q
compiledQueryTerms(q)
yummlyURL()+compiledQueryTerms(q)
link
result
exit
res = RestClient.get(link)
link
exit
url
continue
URI.parse(URI.encode(yummlyURL()+compiledQueryTerms(q)))
exit
makeFetchHappen(yummlyURL()+compiledQueryTerms(q))
makeFetchHappen
yummlyURL()+compiledQueryTerms(q)
yummlyURL()
continue
quit
exit
ENV['API_KEY']
ENV['API_ID']
continue
end
quit
yummlyURL
q
yummlyURL()+compiledQueryTerms(q)
yummlyURL()
exit
Ingredient.all
exit
data["meals"][0]["strIngredient"]
data["meals"][0].strIngredient
data["meals"][0]
data["meals"]
exit
data["meals"]
data.meals
data
data[0]
data
exit
JSON.parse(data)exit
JSON.parse(data)
exit
data.body
data.meals
data
exit
continue
exit
url(item)
item
url("Hello")
url
url(item)
